{
  // vscode默认启用了根据文件类型自动设置tabsize的选项
  "editor.detectIndentation": false,
  // tab 大小为2个空格
  "editor.tabSize": 2,
  // 100 列后换行
  "editor.wordWrapColumn": 100,
  // 保存时格式化
  "editor.formatOnSave": true,
  // 保存时按照哪个规则进行格式化
  "editor.codeActionsOnSave": {
      // 设置 eslint 保存时自动修复
      "source.fixAll.eslint": true
  },
  // 开启 vscode 文件路径导航
  "breadcrumbs.enabled": true,
  // vue 文件和 html 文件，没有 eslint 风格提示。-eslint 检测文件类型
  "eslint.validate": [
      "javascript",
      "javascriptreact",
      "html",
      "vue"
  ],
  // vetur 插件配置
  // vetur 格式化 template
  "vetur.format.defaultFormatter.html": "js-beautify-html",
  "vetur.format.defaultFormatterOptions": {
      "js-beautify-html": {
          // 对每个属性进行换行
          "wrap_attributes": "force-expand-multiline",
          // 当超出折行长度时，将属性进行垂直对齐
          //"wrap_attributes": "aligned-multiple"
          // 对除第一个属性外的其他每个属性进行换行，并保持对齐
          //"wrap_attributes": "force-aligned"
      }
  },
  // 让vue中的js按编辑器自带的ts格式进行格式化 
  "vetur.format.defaultFormatter.js": "vscode-typescript",
  // 为了和其他人webstorm的style标签下格式冲突就配置成none不校验了
  "vetur.format.defaultFormatter.scss": "none",
  // .scss文件按照prettier进行格式化
  // "vetur.format.defaultFormatter.scss": "prettier",
  //  #让prettier使用eslint的代码格式进行校验 
  "prettier.eslintIntegration": true,
  // prettier 设置语句末尾不加分号
  "prettier.semi": false,
  // prettier 设置强制单引号
  "prettier.singleQuote": true,
  //  #让函数(名)和后面的括号之间加个空格
  "javascript.format.insertSpaceBeforeFunctionParenthesis": true,
  "[vue]": {
      "editor.defaultFormatter": "octref.vetur"
  }
}